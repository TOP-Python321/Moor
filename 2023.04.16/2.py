digit1 = int(input("Первое число: "))
digit2 = int(input("Второе число: "))

# КОММЕНТАРИЙ: остаток (матем.) — remainder, rem; частное (матем.) — quotient
result = digit1 % digit2
total = digit1 // digit2

# СДЕЛАТЬ: подумайте и перепишите нижеследующую часть кода так, чтобы обойтись только одним блоком if

# ИСПОЛЬЗОВАТЬ: ещё проще и, главное, без повторного прописывания генерации мало отличающегося строкового литерала
insert1, insert2, insert3 = '', '', ''
if result:
    insert1 = 'не '
    insert2 = 'неполное '
    insert3 = f'\nостаток: {result}'

answer = (f"{digit1} {insert1}делится на {digit2} нацело \n"
          f"{insert2}частное: {total}"
          f"{insert3}")

print(answer)

# ***Ниже есть супер извращенный вариант***
# КОММЕНТАРИЙ: он не то чтобы супер извращённый, а скорее супер неоптимальный — аж три совершенно лишних неявных вызова bool() во время лишних же проверок
# КОММЕНТАРИЙ: если вам это кажется придирками, то представьте, что у вас этот код будет крутиться в цикле на сотню-другую тысяч итераций, например, во время чтения файла, а файлов, которые надо прочитать, пара десятков...
# output = (f"{digit1} {'не ' if result else ''}делится на {digit2} нацело\n"
#           f"{f'частное: {total}' if not result else ''}\n"
#           f"{'неполное частное: %d' % total if result else ''}\n"
#           f"{'остаток: %d' % result if result else ''}")
# print(output)


# 20 делится на 5 нацело
# частное: 4

# 17 не делится на 3 нацело
# неполное частное: 5
# остаток: 2


# ИТОГ: хорошо — 2/3
