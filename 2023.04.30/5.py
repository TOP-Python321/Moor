scores_letters = {
    1: 'АВЕИНОРСТ',
    2: 'ДКЛМПУ',
    3: 'БГЬЯ',
    4: 'ЙЫ',
    5: 'ЖЗХЦЧ',
    8: 'ФШЭЮ',
    10: 'Щ',
    15: 'Ъ'
}

word = input("Введите слово: ").upper().replace("Ё", "Е")

points = sum(
    # ИСПРАВИТЬ: в генераторном выражении значение points на каждой итерации будет равно нулю
    # КОММЕНТАРИЙ: если вы подразумевали, что значение points будет меняться, то это двойная ошибка:
    #  1) int объекты являются неизменяемыми;
    #  2) если бы были изменяемыми и вы бы как-то прописали это изменение на каждой итерации, то каждое число, возвращаемое генератором во время итерации, содержало бы сумму всех предыдущих очков и очки за очередную букву — а потом все эти числа вы ещё снаружи суммируете функцией sum() — итог вышел бы сильно больше ожидаемого числа
    key
    for letter in word for key, value in scores_letters.items()
    if letter in value
)

print(points)

# 2 вариант с циклами

# letters_count = {}
# points = 0

# for letter in list(word):
    # letters_count[letter] = letters_count.get(letter, 0) + 1

# for key, value in letters_count.items():
    # for score, letter in scores_letters.items():
        # if key in list(letter):
            # КОММЕНТАРИЙ: не переносите выражения напрямую из явного цикла в генераторное выражение — они могут работать по-разному
            # points += score * value
# print(points)


# Введите слово: неожиданность
# 20


# ИТОГ: почти хорошо, но требует осмысления — 4/6
